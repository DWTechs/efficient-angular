<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Utility on Efficient-angular</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/</link><description>Recent content in Utility on Efficient-angular</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/index.xml" rel="self" type="application/rss+xml"/><item><title>Delay</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/delay/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/delay/</guid><description>Delays the emission of items from the source Observable by a given timeout or until a given Date.
Syntax delay&amp;lt;T&amp;gt;(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction&amp;lt;T&amp;gt; Parameters Description due The delay duration in milliseconds (a number) or a Date until which the emission of the source items is delayed. scheduler Optional Default is asyncScheduler. The SchedulerLike to use for managing the timers that handle the time-shift for each item.</description></item><item><title>Tap</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/tap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/rxjs/operators/utility/tap/</guid><description>Used to perform side-effects for notifications from the source observable
Syntax tap&amp;lt;T&amp;gt;(observerOrNext?: Partial&amp;lt;Observer&amp;lt;T&amp;gt;&amp;gt; | ((value: T) =&amp;gt; void), error?: (e: any) =&amp;gt; void, complete?: () =&amp;gt; void): MonoTypeOperatorFunction&amp;lt;T&amp;gt; Parameters Description observerOrNext Optional Optional. Default is undefined. A next handler or partial observer. error Optional Default is undefined. An error handler complete Optional Default is undefined. A completion handler Returns MonoTypeOperatorFunction: A function that returns an Observable identical to the source, but runs the specified Observer or callback(s) for each item.</description></item></channel></rss>