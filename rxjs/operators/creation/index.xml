<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Creation on Efficient-angular</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/</link><description>Recent content in Creation on Efficient-angular</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/index.xml" rel="self" type="application/rss+xml"/><item><title>From</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/from/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/from/</guid><description>Previous : Operators
From Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.
Syntax from&amp;lt;T&amp;gt;(input: ObservableInput&amp;lt;T&amp;gt;, scheduler?: SchedulerLike): Observable&amp;lt;T&amp;gt; Parameters Description input Type: ObservableInput. scheduler Optional Default is undefined. Type: SchedulerLike. Returns Observable:
Example Converts an array to an Observable
import { from } from &amp;#39;rxjs&amp;#39;; const array = [10, 20, 30]; const result = from(array); result.subscribe(x =&amp;gt; console.log(x)); // Logs: // 10 // 20 // 30</description></item><item><title>FromEvent</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/from-event/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/from-event/</guid><description>Previous : Operators
FromEvent Creates an Observable that emits events of a specific type coming from the given event target.
Syntax fromEvent&amp;lt;T&amp;gt;(target: any, eventName: string, options?: EventListenerOptions | ((...args: any[]) =&amp;gt; T), resultSelector?: (...args: any[]) =&amp;gt; T): Observable&amp;lt;T&amp;gt; Parameters Description target The DOM EventTarget, Node.js EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to. eventName The event name of interest, being emitted by the target. options optional Default is undefined.</description></item><item><title>Of</title><link>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/of/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/rxjs/operators/creation/of/</guid><description>Previous : Operators
Of Converts the arguments to an observable sequence.
Syntax of&amp;lt;T&amp;gt;(...args: (SchedulerLike | T)[]): Observable&amp;lt;T&amp;gt; Parameters Description args Type: `(SchedulerLike Returns Observable: An Observable that emits the arguments described above and then completes.
Example Emit the values 10, 20, 30
import { of } from &amp;#39;rxjs&amp;#39;; of(10, 20, 30) .subscribe( next =&amp;gt; console.log(&amp;#39;next:&amp;#39;, next), err =&amp;gt; console.log(&amp;#39;error:&amp;#39;, err), () =&amp;gt; console.log(&amp;#39;the end&amp;#39;), ); // Outputs // next: 10 // next: 20 // next: 30 // the end</description></item></channel></rss>