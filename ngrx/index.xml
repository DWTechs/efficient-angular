<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NgRx on Efficient-angular</title><link>https://dwtechs.github.io/efficient-angular/ngrx/</link><description>Recent content in NgRx on Efficient-angular</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwtechs.github.io/efficient-angular/ngrx/index.xml" rel="self" type="application/rss+xml"/><item><title>Basics</title><link>https://dwtechs.github.io/efficient-angular/ngrx/basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/basics/</guid><description>@ngrx/store Store is RxJS powered global state management for Angular applications, inspired by Redux. Store is a controlled state container designed to help write performant, consistent applications on top of Angular.
Key concepts Actions describe unique events that are dispatched from components and services. State changes are handled by pure functions called reducers that take the current state and the latest action to compute a new state. Selectors are pure functions used to select, derive and compose pieces of state.</description></item><item><title>Reducers</title><link>https://dwtechs.github.io/efficient-angular/ngrx/reducers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/reducers/</guid><description/></item><item><title>Selectors</title><link>https://dwtechs.github.io/efficient-angular/ngrx/selectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/selectors/</guid><description/></item></channel></rss>