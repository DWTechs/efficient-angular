<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NgRx on Efficient-angular</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/</link><description>Recent content in NgRx on Efficient-angular</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://dwtechs.github.io/efficient-angular/ngrx/Store/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating observables</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/actions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/Store/actions/</guid><description>Actions Actions are one of the main building blocks in NgRx. Actions express unique events that happen throughout your application. From user interaction with the page, external interaction through network requests, and direct interaction with device APIs, these and more events are described with actions.
Actions are the inputs and outputs of many systems in NgRx. Actions help you to understand how events are handled in your application.
The Action interface An Action in NgRx is made up of a simple interface:</description></item><item><title>Creating observables</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/Store/install/</guid><description>Installation Installing with npm npm install @ngrx/store --save Installing with yarn yarn add @ngrx/store Installing with ng add If your project is using the Angular CLI 6+ then you can install the Store to your project with the following ng add command :
ng add @ngrx/store@latest Optional ng add flags path - path to the module that you wish to add the import for the StoreModule to. project - name of the project defined in your angular.</description></item><item><title>Creating observables</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/reducer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/Store/reducer/</guid><description/></item><item><title>Creating observables</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/selector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/Store/selector/</guid><description/></item><item><title>NgRx Store Definition</title><link>https://dwtechs.github.io/efficient-angular/ngrx/Store/definition/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://dwtechs.github.io/efficient-angular/ngrx/Store/definition/</guid><description>Definition Store is RxJS powered global state management for Angular applications, inspired by Redux. Store is a controlled state container designed to help write performant, consistent applications on top of Angular.
Key concepts Actions describe unique events that are dispatched from components and services. State changes are handled by pure functions called reducers that take the current state and the latest action to compute a new state. Selectors are pure functions used to select, derive and compose pieces of state.</description></item></channel></rss>